{"version":3,"sources":["logo.svg","Button.js","AppHeader.js","Avatar.js","ContactItem.js","ContactList.js","Input.js","NewContactContainer.js","ActualDate.js","ActualDateContainer.js","UsersList.js","UsersListContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","_ref","_ref$label","label","onButtonClick","react_default","a","createElement","className","onClick","AppHeader","handleClick","alert","href","src","src_Button","this","Component","Avatar","login","imgUrl","includes","concat","ContactItem","_this$props","props","name","department","src_Avatar","ContactList","src_ContactItem","Input","placeholderText","onTextInput","placeholder","onInput","NewContactContainer","state","summaryNameText","summaryDepartmentText","writeSomeTextOnName","event","myEvent","target","value","_this","setState","prevState","writeSomeTextOnDepartment","src_Input","ActualDate","date","Date","componentDidMount","timerId","window","setInterval","updateDate","componentWillUnmount","clearInterval","dataStr","toString","ActualDateContainer","isDateVisible","dateButtonHandleClick","src_ActualDate","UsersList","users","length","map","user","key","completeListOfUsers","UsersListContainer","actualUserList","filterUsersBasedOnTextProvidedInInput","textFromInput","getFilteredUsersFromText","then","filteredUsers","catch","err","console","log","text","Promise","resolve","reject","time","Math","random","setTimeout","filter","toLowerCase","src_UsersList","App","src_AppHeader","src_ContactList","src_NewContactContainer","src_ActualDateContainer","src_UsersListContainer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yLCQzBC,MANf,SAAAC,GAAiD,IAAAC,EAAAD,EAAhCE,aAAgC,IAAAD,EAA1B,QAA0BA,EAAjBE,EAAiBH,EAAjBG,cAC5B,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYC,QAASL,GAAgBD,ICwBhDO,6MAxBXC,YAAc,WACVC,MAAM,2FAIN,OACIP,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,KAAGM,KAAK,IAAIL,UAAU,eAClBH,EAAAC,EAAAC,cAAA,OACIC,UAAU,OACVM,IAAI,kHAHZ,sBAOAT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACQ,EAAD,CAAQZ,MAAO,SAAUC,cAAeY,KAAKL,wBAjB7CM,aCWTC,MAZf,SAAAjB,GAA2B,IAATkB,EAASlB,EAATkB,MACVC,EAAS,GAMb,OAJIA,EADAD,EAAME,SAAS,KACT,mEAEA,sCAAAC,OAAyCH,EAAzC,QAGNd,EAAAC,EAAAC,cAAA,OAAKO,IAAKM,EAAQZ,UAAU,2BCQrBe,mLAdF,IAAAC,EAC+BR,KAAKS,MAAjCN,EADHK,EACGL,MAAOO,EADVF,EACUE,KAAMC,EADhBH,EACgBG,WACrB,OACItB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACVH,EAAAC,EAAAC,cAACqB,EAAD,CAAQT,MAAOA,IACfd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUkB,GACxBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAemB,YARxBV,aCuBXY,MAvBf,WACI,OACIxB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qCACVH,EAAAC,EAAAC,cAACuB,EAAD,CACIX,MAAM,kBACNO,KAAK,OACLC,WAAW,yBAEftB,EAAAC,EAAAC,cAACuB,EAAD,CACIX,MAAM,aACNO,KAAK,QACLC,WAAW,oBAEftB,EAAAC,EAAAC,cAACuB,EAAD,CACIX,MAAM,aACNO,KAAK,OACLC,WAAW,SCTZI,EARD,SAAA9B,GAAsC,IAAnC+B,EAAmC/B,EAAnC+B,gBAAiBC,EAAkBhC,EAAlBgC,YAC9B,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,SAAO2B,YAAaF,EAAiBG,QAASF,MCkC3CG,6MAnCXC,MAAQ,CACJC,gBAAiB,GACjBC,sBAAuB,MAG3BC,oBAAsB,SAACC,GACnB,IAAMC,EAAUD,EAAME,OAAOC,MAC7BC,EAAKC,SAAS,SAACC,GAAD,MAAgB,CAC1BT,gBAAiBI,QAIzBM,0BAA4B,SAACP,GACzB,IAAMC,EAAUD,EAAME,OAAOC,MAC7BC,EAAKC,SAAS,SAACC,GAAD,MAAgB,CAC1BR,sBAAuBG,8EAKC1B,KAAKS,MAAzBO,gBACR,OACI3B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0C,EAAD,CAAOjB,gBAAgB,OAAOC,YAAajB,KAAKwB,uBAEhDnC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC0C,EAAD,CAAOjB,gBAAgB,aAAaC,YAAajB,KAAKgC,6BAEtD3C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,WAAWQ,KAAKqB,MAAMC,gBAAnC,IAAqDtB,KAAKqB,MAAME,+BA9B9CtB,aC2BnBiC,6MA1BXb,MAAQ,CACJc,KAAM,IAAIC,QAGdC,kBAAoB,WAChBR,EAAKS,QAAUC,OAAOC,YAAYX,EAAKY,WAAY,QAGvDC,qBAAuB,WACnBH,OAAOI,cAAcd,EAAKS,YAG9BG,WAAa,WACTZ,EAAKC,SAAS,CACVK,KAAM,IAAIC,gFAKd,IAAMQ,EAAU5C,KAAKqB,MAAMc,KAAKU,WAChC,OACIxD,EAAAC,EAAAC,cAAA,YAAOqD,UAtBM3C,aCsBV6C,6MApBXzB,MAAQ,CACJ0B,eAAe,KAGnBC,sBAAwB,WACpBnB,EAAKC,SAAS,SAACC,GAAD,MAAgB,CAC1BgB,eAAgBhB,EAAUgB,0FAK9B,OACI1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACQ,EAAD,CAAQZ,MAAOa,KAAKqB,MAAM0B,cAAgB,OAAS,OAAQ3D,cAAeY,KAAKgD,wBAC9EhD,KAAKqB,MAAM0B,eAAiB1D,EAAAC,EAAAC,cAAC0D,EAAD,cAfXhD,aCWnBiD,MAbf,SAAAjE,GAA8B,IAATkE,EAASlE,EAATkE,MACjB,OAAIA,EAAMC,OAAS,EAEX/D,EAAAC,EAAAC,cAAA,UACK4D,EAAME,IAAI,SAAAC,GAAI,OAAIjE,EAAAC,EAAAC,cAAA,MAAIgE,IAAKD,GAAOA,MAK3CjE,EAAAC,EAAAC,cAAA,wBCNFiE,EAAsB,CAAC,SAAU,QAAS,QAAS,QAAS,QAAS,OAAQ,aAAc,OAAQ,UA6C1FC,6MA1CXpC,MAAQ,CACJqC,eAAgBF,KAGpBG,sCAAwC,SAAClC,GACrC,IAAMmC,EAAgBnC,EAAME,OAAOC,MACnCC,EAAKgC,yBAAyBD,GAC7BE,KAAK,SAACC,GACHlC,EAAKC,SAAS,CACV4B,eAAgBK,MAGvBC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,8FAULG,GACrB,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzB,IAAMC,EAA6B,KAArBC,KAAKC,SAAW,GAC9BC,WAAW,WACP,IAAMZ,EAAgBP,EAAoBoB,OAAO,SAAAtB,GAAI,OAAIA,EAAKuB,cAAcxE,SAAS+D,EAAKS,iBAC1FP,EAAQP,IACTS,sCAKP,OACInF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC0C,EAAD,CAAOjB,gBAAgB,YAAYC,YAAajB,KAAK2D,wCACrDtE,EAAAC,EAAAC,cAACuF,EAAD,CAAW3B,MAAOnD,KAAKqB,MAAMqC,yBArCZzD,aCgClB8E,mLA5BX,OACE1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAebH,EAAAC,EAAAC,cAACyF,EAAD,MACA3F,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BACdH,EAAAC,EAAAC,cAAC0F,EAAD,MACA5F,EAAAC,EAAAC,cAAC2F,EAAD,MACA7F,EAAAC,EAAAC,cAAC4F,EAAD,MACA9F,EAAAC,EAAAC,cAAC6F,EAAD,eAvBQnF,aCGEoF,QACW,cAA7B9C,OAAO+C,SAASC,UAEe,UAA7BhD,OAAO+C,SAASC,UAEhBhD,OAAO+C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOrG,EAAAC,EAAAC,cAACoG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlC,KAAK,SAAAmC,GACjCA,EAAaC","file":"static/js/main.e088301f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react';\r\n\r\nfunction Button({label=\"Dodaj\", onButtonClick }) {\r\n    return(\r\n        <button className=\"ui button\" onClick={onButtonClick}>{label}</button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Button from './Button.js';\r\n\r\nclass AppHeader extends Component {\r\n    handleClick = () => {\r\n        alert(\"Kliknięto\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"ui fixed menu\">\r\n                <nav className=\"ui container\">\r\n                    <a href=\"#\" className=\"header item\">\r\n                        <img\r\n                            className=\"logo\"\r\n                            src=\"https://typeofweb.com/wp-content/uploads/2017/08/cropped-typeofweb_logo-04-white-smaller-1-e1504359870362.png\"\r\n                        />\r\n                        Lista kontaktów\r\n                    </a>\r\n                    <div className=\"header item\">\r\n                        <Button label={\"Dodaj!\"} onButtonClick={this.handleClick}></Button>\r\n                    </div>\r\n                </nav>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppHeader;","import React, { Component } from 'react';\r\n\r\nfunction Avatar({ login }) {\r\n    let imgUrl = '';\r\n    if (login.includes('@')) {\r\n        imgUrl = `https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50`;\r\n    } else {\r\n        imgUrl = `https://api.adorable.io/avatars/55/${login}.png`;\r\n    }\r\n    return (\r\n        <img src={imgUrl} className=\"ui mini rounded image\" />\r\n    );\r\n}\r\n\r\nexport default Avatar;","import React, { Component } from 'react';\r\nimport Avatar from './Avatar.js';\r\n\r\nclass ContactItem extends Component {\r\n    render() {\r\n        const { login, name, department } = this.props;\r\n        return (\r\n            <li className=\"item\">\r\n                <Avatar login={login} />\r\n                <div className=\"content\">\r\n                    <h4 className=\"header\">{name}</h4>\r\n                    <div className=\"description\">{department}</div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactItem;","import React, { Component } from 'react';\r\nimport ContactItem from './ContactItem';\r\n\r\nfunction ContactList() {\r\n    return (\r\n        <ul className=\"ui relaxed divided list selection\" >\r\n            <ContactItem\r\n                login=\"type@ofweb1.com\"\r\n                name=\"Lena\"\r\n                department=\"JavaScript Developer\"\r\n            />\r\n            <ContactItem\r\n                login=\"typeofweb2\"\r\n                name=\"Brian\"\r\n                department=\"Human Resources\"\r\n            />\r\n            <ContactItem\r\n                login=\"typeofweb3\"\r\n                name=\"Rick\"\r\n                department=\"QA\"\r\n            />\r\n            \r\n        </ul >\r\n    );\r\n}\r\n\r\nexport default ContactList;","import React, { Component } from 'react';\r\n\r\nconst Input = ({ placeholderText, onTextInput }) => {\r\n    return (\r\n        <div className=\"ui input\">\r\n            <input placeholder={placeholderText} onInput={onTextInput}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Input from './Input.js';\r\n\r\nclass NewContactContainer extends Component {\r\n    state = {\r\n        summaryNameText: '',\r\n        summaryDepartmentText: ''\r\n    };\r\n\r\n    writeSomeTextOnName = (event) => {\r\n        const myEvent = event.target.value;\r\n        this.setState((prevState) => ({\r\n            summaryNameText: myEvent\r\n        }));\r\n    }\r\n\r\n    writeSomeTextOnDepartment = (event) => {\r\n        const myEvent = event.target.value;\r\n        this.setState((prevState) => ({\r\n            summaryDepartmentText: myEvent\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const { placeholderText } = this.props;\r\n        return (\r\n            <div>\r\n                <div>\r\n                <Input placeholderText=\"Name\" onTextInput={this.writeSomeTextOnName} /> \r\n                </div>\r\n                <div>\r\n                <Input placeholderText=\"Department\" onTextInput={this.writeSomeTextOnDepartment} />\r\n                </div>\r\n                <p className=\"summary\">{this.state.summaryNameText} {this.state.summaryDepartmentText}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewContactContainer;","import React, { Component } from 'react';\r\nimport Button from './Button.js';\r\n\r\nclass ActualDate extends Component {\r\n    state = {\r\n        date: new Date()\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.timerId = window.setInterval(this.updateDate, 1000);\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        window.clearInterval(this.timerId);\r\n    }\r\n\r\n    updateDate = () => {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const dataStr = this.state.date.toString();\r\n        return (\r\n            <time>{dataStr}</time>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActualDate;","import React, { Component } from 'react';\r\nimport ActualDate from './ActualDate.js';\r\nimport Button from './Button.js';\r\n\r\nclass ActualDateContainer extends Component {\r\n    state = {\r\n        isDateVisible: true        \r\n    }\r\n\r\n    dateButtonHandleClick = () => {\r\n        this.setState((prevState) => ({\r\n            isDateVisible: !prevState.isDateVisible,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button label={this.state.isDateVisible ? \"Hide\" : \"Show\"} onButtonClick={this.dateButtonHandleClick}></Button>\r\n                {this.state.isDateVisible && <ActualDate />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActualDateContainer;","import React, { Component } from 'react';\r\n\r\nfunction UsersList({ users }) {\r\n    if (users.length > 0) {\r\n        return (\r\n            <ul>\r\n                {users.map(user => <li key={user}>{user}</li>)}\r\n            </ul>\r\n        );\r\n    }\r\n    return (\r\n        <p>No results</p>\r\n    );\r\n}\r\n\r\nexport default UsersList;","import React, { Component } from 'react';\r\nimport UsersList from './UsersList';\r\nimport Input from './Input';\r\n// z braku laku istniających userów definiuję po prostu jako stałą\r\n// w prawdziwej aplikacji pochodziliby z API i/lub byli w Reduksowym storze \r\nconst completeListOfUsers = ['Michal', 'Kasia', 'Jacek', 'Marta', 'Tomek', 'Ania', 'Druga Ania', 'Kate', 'Placek'];\r\n\r\nclass UsersListContainer extends Component {\r\n    state = {\r\n        actualUserList: completeListOfUsers\r\n    }\r\n\r\n    filterUsersBasedOnTextProvidedInInput = (event) => {\r\n        const textFromInput = event.target.value;\r\n        this.getFilteredUsersFromText(textFromInput)\r\n        .then((filteredUsers) => {\r\n            this.setState({\r\n                actualUserList: filteredUsers\r\n            });\r\n        })\r\n        .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    // NIE UŻYWAM ZAPISU STRZAŁKOWEGO BO TĘ FUNKCJE TYLKO WYWOŁUJĘ A NIE PODAJĘ JAKO PARAMETRU\r\n    // getFilteredUsersFromText(text) {\r\n    //     return completeListOfUsers.filter(user => user.toLowerCase().includes(text.toLowerCase()))\r\n    // }\r\n\r\n    // wprowadzona asynchoniczność\r\n    getFilteredUsersFromText(text) {\r\n        return new Promise((resolve, reject) => {\r\n            const time = (Math.random() + 1) * 250;\r\n            setTimeout(() => {\r\n                const filteredUsers = completeListOfUsers.filter(user => user.toLowerCase().includes(text.toLowerCase()));\r\n                resolve(filteredUsers);\r\n            }, time);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Input placeholderText=\"User name\" onTextInput={this.filterUsersBasedOnTextProvidedInInput} />\r\n                <UsersList users={this.state.actualUserList}></UsersList>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UsersListContainer;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport AppHeader from './AppHeader';\nimport ContactList from './ContactList';\nimport NewContactContainer from './NewContactContainer';\nimport ActualDateContainer from './ActualDateContainer';\nimport UsersListContainer from './UsersListContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        {/* <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header> */}\n        <AppHeader />\n        <main className=\"ui main text container\">\n          <ContactList />\n          <NewContactContainer />\n          <ActualDateContainer />\n          <UsersListContainer />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}